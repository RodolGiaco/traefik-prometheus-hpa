#apiVersion: traefik.io/v1alpha1
#kind: IngressRoute
#metadata:
#  name: foo
#  namespace: bar
#spec:
#  entryPoints:                      # [1]
#    - foo
#  routes:                           # [2]
#    - kind: Rule
#      match: Host(`test.example.com`) # [3]
#      priority: 10                    # [4]
#      middlewares:                    # [5]
#        - name: middleware1             # [6]
#          namespace: default            # [7]
#      services:                       # [8]
#        - kind: Service
#          name: foo
#          namespace: default
#          passHostHeader: true
#          port: 80                      # [9]
#          responseForwarding:
#            flushInterval: 1ms
#          scheme: https
#          serversTransport: transport   # [10]
#          sticky:
#            cookie:
#              httpOnly: true
#              name: cookie
#              secure: true
#              sameSite: none
#              maxAge: 42
#          strategy: RoundRobin
#          weight: 10
#          nativeLB: true                # [11]
#  tls:                              # [12]
#    secretName: supersecret         # [13]
#    options:                        # [14]
#      name: opt                     # [15]
#      namespace: default            # [16]
#    certResolver: foo               # [17]
#    domains:                        # [18]
#      - main: example.net             # [19]
#        sans:                         # [20]
#          - a.example.net
#          - b.example.net

#  [1]	entryPoints	List of entry points names
#  [2]	routes	List of routes
#  [3]	routes[n].match	Defines the rule corresponding to an underlying router.
#  [4]	routes[n].priority	Defines the priority to disambiguate rules of the same length, for route matching
#  [5]	routes[n].middlewares	List of reference to Middleware
#  [6]	middlewares[n].name	Defines the Middleware name
#  [7]	middlewares[n].namespace	Defines the Middleware namespace. It can be omitted when the Middleware is in the IngressRoute namespace.
#  [8]	routes[n].services	List of any combination of TraefikService and reference to a Kubernetes service (See below for ExternalName Service setup)
#  [9]	services[n].port	Defines the port of a Kubernetes service. This can be a reference to a named port.
#  [10]	services[n].serversTransport	Defines the reference to a ServersTransport. The ServersTransport namespace is assumed to be the Kubernetes service namespace (see ServersTransport reference).
#  [11]	services[n].nativeLB	Controls, when creating the load-balancer, whether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.
#  [12]	tls	Defines TLS certificate configuration
#  [13]	tls.secretName	Defines the secret name used to store the certificate (in the IngressRoute namespace)
#  [14]	tls.options	Defines the reference to a TLSOption
#  [15]	options.name	Defines the TLSOption name
#  [16]	options.namespace	Defines the TLSOption namespace
#  [17]	tls.certResolver	Defines the reference to a CertResolver
#  [18]	tls.domains	List of domains
#  [19]	domains[n].main	Defines the main domain name
#  [20]	domains[n].sans	List of SANs (alternative domains)

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingresshttp-video-playback
  namespace: beta
spec:
  entryPoints:
    - web
  routes:
    # Se definen el enrutamiento para los services de tipo nodeport para el servicio de video llamado video-playback
#    - match: Host(`playback.sitrack.io`) && PathPrefix(`/playback`)
    - match: Host(`multimediakind.ddns.net`) && PathPrefix(`/playback`)
      kind: Rule
      priority: 1
      middlewares:
        - name: ratelimit
          namespace: beta
      services:
        - name: video-playback-api
          port: 4444

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingresshttp-video-playback-videotest
  namespace: beta
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`playback.videotest.sitrack.io`) && PathPrefix(`/playback`)
#    - match: Host(`multimediatest.ddns.net`) && PathPrefix(`/playback`)
      kind: Rule
      priority: 1
      middlewares:
        - name: ratelimit
          namespace: beta
      services:
        - name: video-playback-api-videotest
          port: 4444

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingresshttp-doug
  namespace: beta
spec:
  entryPoints:
    - web
  routes:
    # Se definen el enrutamiento para los services de tipo nodeport para el servicio de video llamado doug
#    - match: Host(`playback.sitrack.io`) && PathPrefix(`/api`)
    - match: Host(`multimediakind.ddns.net`) && PathPrefix(`/api`)
      kind: Rule
      priority: 1
      middlewares:
        - name: ratelimit
          namespace: beta
      services:
        - name: doug-api
          port: 4444

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingresshttp-doug-videotest
  namespace: beta
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`playback.videotest.sitrack.io`) && PathPrefix(`/api`)
#    - match: Host(`multimediatest.ddns.net`) && PathPrefix(`/api`)
      kind: Rule
      priority: 1
      middlewares:
        - name: ratelimit
          namespace: beta
      services:
        - name: doug-api-videotest
          port: 4444