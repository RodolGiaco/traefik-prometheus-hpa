apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-adapter-config
  namespace: monitoring
  labels:
    app: prometheus-adapter
data:
  config.yaml: |
    rules:
      - seriesQuery: 
        resources:
          overrides:
            namespace:
              resource: namespace
            pod:
              resource: pod
        name:
          matches: "^(.*)_total"
          as: "base-vpb"
        metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (host, <<.GroupBy>>)'
        
    
   
    externalRules:
      # Reglas de las metricas externas para conexiones TCP
      - seriesQuery: 'traefik_open_connections{namespace!="",pod=~"video-playback-videotest.*",entrypoint="pbtcpvideotest"}'
        resources:
          overrides:
            namespace:
              resource: namespace
            pod:
              resource: pod
        name:
          matches: "^(.*)_total"
          as: "pbtcpvideotest"
        metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (entrypoint, <<.GroupBy>>)'
      - seriesQuery: 'traefik_open_connections{namespace!="",pod=~"video-playback-videotest.*",entrypoint="pbtcp"}'
        resources:
          overrides:
            namespace:
              resource: namespace
            pod:
              resource: pod
        name:
          matches: "^(.*)_total"
          as: "pbtcpbase"
        metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (entrypoint, <<.GroupBy>>)'    
    
    
      # Reglas de las metricas externas para cantidad de solicitudes HTTP
      - seriesQuery: 'traefik_service_requests_total{namespace!="",pod=~"video-playback-videotest.*",host="playback.videotest.sitrack.io"}'
        resources:
          overrides:
            namespace:
              resource: namespace
            pod:
              resource: pod
        name:
          matches: "^(.*)_total"
          as: "pbvideotest"
        metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (host, <<.GroupBy>>)'
      - seriesQuery: 'traefik_service_requests_total{namespace!="",pod=~"video-playback-.*",host="playback.sitrack.io"}'
        resources:
          overrides:
            namespace:
              resource: namespace
            pod:
              resource: pod
        name:
          matches: "^(.*)_total"
          as: "pbbase"
        metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (host, <<.GroupBy>>)'
        
        
        
        

